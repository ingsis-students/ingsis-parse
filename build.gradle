plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jlleitschuh.gradle.ktlint' version '10.2.1'
    id 'org.jetbrains.kotlinx.kover' version '0.8.2'
}

group = 'com.students'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/santosbogo/printscript")
        credentials {
            username = project.findProperty("github.user") ?: System.getenv("USER")
            password = project.findProperty("github.token") ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation 'com.github.santosbogo.PrintScript:runner:1.1.22-SNAPSHOT'
    implementation 'com.github.santosbogo.PrintScript:shared:1.1.22-SNAPSHOT'
    implementation 'com.github.santosbogo.PrintScript:interpreter:1.1.22-SNAPSHOT'
    implementation 'com.github.santosbogo.PrintScript:formatter:1.1.22-SNAPSHOT'
    implementation 'com.github.santosbogo.PrintScript:linter:1.1.22-SNAPSHOT'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

kover {
    useJacoco()
    reports {
        verify {
            rule {
                minBound(80)
            }
        }
    }
}

ktlint{
}

tasks.named('build') {
    dependsOn "ktlintCheck", ":koverVerify", ":koverHtmlReport"
}

tasks.named('check') {
    dependsOn "ktlintCheck", ":koverVerify", ":koverHtmlReport"
}